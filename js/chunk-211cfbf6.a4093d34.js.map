{"version":3,"sources":["webpack:///./node_modules/core-js/internals/same-value.js","webpack:///./node_modules/core-js/modules/es.string.search.js","webpack:///./src/views/AgreementFinish/Main.vue?2c1b","webpack:///src/views/AgreementFinish/Main.vue","webpack:///./src/views/AgreementFinish/Main.vue?062f","webpack:///./src/views/AgreementFinish/Main.vue"],"names":["module","exports","Object","is","x","y","fixRegExpWellKnownSymbolLogic","anObject","requireObjectCoercible","sameValue","regExpExec","SEARCH","nativeSearch","maybeCallNative","regexp","O","this","searcher","undefined","call","RegExp","String","res","done","value","rx","S","previousLastIndex","lastIndex","result","index","render","_vm","_h","$createElement","_c","_self","staticClass","_m","_v","_s","person","name","company","class","downloadLoading","attrs","on","$event","preventDefault","downloadFile","load","initDiadocScript","ref","diadocModal","_e","sertificatesModal","_l","sertificate","key","_cadesCertificate","objid","selectedSertificates","parseDate","validTo","signLoad","createSignature","errorDiadocModal","errorDiadocText","staticRenderFns","component"],"mappings":"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","file":"js/chunk-211cfbf6.a4093d34.js","sourcesContent":["// `SameValue` abstract operation\n// https://tc39.es/ecma262/#sec-samevalue\n// eslint-disable-next-line es/no-object-is -- safe\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar sameValue = require('../internals/same-value');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@search logic\nfixRegExpWellKnownSymbolLogic('search', 1, function (SEARCH, nativeSearch, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.es/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = requireObjectCoercible(this);\n      var searcher = regexp == undefined ? undefined : regexp[SEARCH];\n      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@search\n    function (regexp) {\n      var res = maybeCallNative(nativeSearch, regexp, this);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"agreement-organisation\"},[(_vm.success)?[_vm._m(0)]:[_c('div',{staticClass:\"h3\"},[_vm._v(\"Добрый день, \"),_c('br'),_vm._v(_vm._s(_vm.person ? _vm.person.name : '')+\"!\")]),_c('p',[_vm._v(\"Для организаций \"+_vm._s(_vm.person ? _vm.person.company.name : '')+\" оформлена кредитная программа. Для оформление заявки, необходимо ваше согласование, как одного из учредителей.\")]),_c('a',{staticClass:\"link link-with-loading\",class:{'loading': _vm.downloadLoading},attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.downloadFile($event)}}},[_vm._v(\"Подробнее о кредитной программе\")]),_c('button',{staticClass:\"btn btn-block btn-lg\",class:{'loading': _vm.load},attrs:{\"disabled\":_vm.load},on:{\"click\":_vm.initDiadocScript}},[_vm._v(\"Подписать\")]),_c('div',{staticClass:\"footer-text\"},[_vm._v(\"Подписание осуществляется при помощи ЭП\")])],(_vm.diadocModal)?_c('Popup',{ref:\"diadocModal\",attrs:{\"classes\":\"diadoc-plugins-modal\"},on:{\"close-modal\":function($event){this.diadocModal = false}}},[_c('div',{staticClass:\"popup-title\"},[_c('div',{staticClass:\"h2\"},[_vm._v(\"Для подписания документов при помощи ЭЦП Вам необходимо:\")])]),_c('div',{staticClass:\"popup-body\"},[_c('div',{staticClass:\"plugins-list\"},[_c('div',{staticClass:\"plugins-list-item\"},[_vm._v(\"1. Установить криптопровайдер: \"),_c('br'),_c('a',{staticClass:\"link\",attrs:{\"href\":\"https://www.cryptopro.ru/products/cades/plugin\",\"target\":\"_blank\"}},[_vm._v(\"КриптоПро CSP\")])]),_c('div',{staticClass:\"plugins-list-item\"},[_vm._v(\"2. Установите КриптоПро ЭЦП Browser plug-in: \"),_c('br'),_c('a',{staticClass:\"link\",attrs:{\"href\":\"https://cryptopro.ru/products/cades/plugin/get_2_0\",\"target\":\"_blank\"}},[_vm._v(\"КриптоПро CSP Browser plug-in\")])])])])]):_vm._e(),(_vm.sertificatesModal)?_c('Popup',{ref:\"sertificatesModal\",attrs:{\"classes\":\"sertificates-modal\"},on:{\"close-modal\":function($event){_vm.sertificatesModal = false}}},[_c('div',{staticClass:\"popup-title\"},[_c('div',{staticClass:\"h2\"},[_vm._v(\"Выберите необходимый сертификат для цифровой подписи документов:\")])]),_c('div',{staticClass:\"popup-body\"},[_c('div',{staticClass:\"select-sertificates\"},_vm._l((_vm.sertificates),function(sertificate){return _c('div',{key:sertificate._cadesCertificate.objid,staticClass:\"sertificates-item\",class:{'active': _vm.selectedSertificates == sertificate},on:{\"click\":function($event){_vm.selectedSertificates = sertificate}}},[_c('span',[_vm._v(_vm._s(sertificate.name)+\" (действителен до: \"+_vm._s(_vm.parseDate(sertificate.validTo))+\")\")])])}),0),_c('button',{staticClass:\"btn btn-block\",class:{'loading': _vm.signLoad},attrs:{\"disabled\":_vm.signLoad},on:{\"click\":_vm.createSignature}},[_vm._v(\"Подписать\")])])]):_vm._e(),(_vm.errorDiadocModal)?_c('Popup',{attrs:{\"error\":true,\"classes\":'error-modal',\"zIndex\":101},on:{\"close-modal\":function($event){_vm.errorDiadocModal = false}}},[_c('div',{staticClass:\"popup-title\"},[_c('div',{staticClass:\"h3\"},[_vm._v(\"Ошибка\")])]),_c('div',{staticClass:\"popup-body\"},[_c('p',{staticClass:\"error-text\"},[_vm._v(_vm._s(_vm.errorDiadocText))]),_c('button',{staticClass:\"btn btn-lg btn-block close-modal\"},[_vm._v(\"Попробовать снова\")])])]):_vm._e()],2)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"agreement-result\"},[_c('div',{staticClass:\"agreement-result-icon\"},[_c('span',{staticClass:\"icon-double-checkmark\"})]),_c('div',{staticClass:\"h3\"},[_vm._v(\"Успешно!\")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n\r\n    <div class=\"agreement-organisation\">\r\n\r\n        <template v-if=\"success\">\r\n\r\n            <div class=\"agreement-result\">\r\n\r\n                <div class=\"agreement-result-icon\">\r\n                    <span class=\"icon-double-checkmark\"></span>\r\n                </div>\r\n\r\n                <div class=\"h3\">Успешно!</div>\r\n\r\n            </div>\r\n\r\n        </template>\r\n\r\n        <template v-else>\r\n\r\n            <div class=\"h3\">Добрый день, <br>{{person ? person.name : ''}}!</div>\r\n\r\n            <p>Для организаций {{person ? person.company.name : ''}} оформлена кредитная программа. Для оформление заявки, необходимо ваше согласование, как одного из учредителей.</p>\r\n\r\n            <a href=\"#\"\r\n               class=\"link link-with-loading\"\r\n               :class=\"{'loading': downloadLoading}\"\r\n               @click.prevent=\"downloadFile\">Подробнее о кредитной программе</a>\r\n\r\n            <button class=\"btn btn-block btn-lg\"\r\n                    :class=\"{'loading': load}\"\r\n                    :disabled=\"load\"\r\n                    @click=\"initDiadocScript\">Подписать</button>\r\n\r\n            <div class=\"footer-text\">Подписание осуществляется при помощи ЭП</div>\r\n\r\n        </template>\r\n\r\n        <Popup v-if=\"diadocModal\"\r\n               ref=\"diadocModal\"\r\n               @close-modal=\"this.diadocModal = false\"\r\n               classes=\"diadoc-plugins-modal\">\r\n\r\n            <div class=\"popup-title\">\r\n                <div class=\"h2\">Для подписания документов при помощи ЭЦП Вам необходимо:</div>\r\n            </div>\r\n\r\n            <div class=\"popup-body\">\r\n                <div class=\"plugins-list\">\r\n                    <div class=\"plugins-list-item\">1. Установить криптопровайдер: <br><a href=\"https://www.cryptopro.ru/products/cades/plugin\" class=\"link\" target=\"_blank\">КриптоПро CSP</a></div>\r\n                    <div class=\"plugins-list-item\">2. Установите КриптоПро ЭЦП Browser plug-in: <br><a href=\"https://cryptopro.ru/products/cades/plugin/get_2_0\" class=\"link\" target=\"_blank\">КриптоПро CSP Browser plug-in</a></div>\r\n                </div>\r\n            </div>\r\n\r\n        </Popup>\r\n\r\n        <Popup v-if=\"sertificatesModal\"\r\n               ref=\"sertificatesModal\"\r\n               @close-modal=\"sertificatesModal = false\"\r\n               classes=\"sertificates-modal\">\r\n\r\n            <div class=\"popup-title\">\r\n                <div class=\"h2\">Выберите необходимый сертификат для цифровой подписи документов:</div>\r\n            </div>\r\n\r\n            <div class=\"popup-body\">\r\n                <div class=\"select-sertificates\">\r\n                    <div v-for=\"sertificate in sertificates\"\r\n                         :key=\"sertificate._cadesCertificate.objid\"\r\n                         class=\"sertificates-item\"\r\n                         :class=\"{'active': selectedSertificates == sertificate}\"\r\n                         @click=\"selectedSertificates = sertificate\">\r\n                        <span>{{sertificate.name}} (действителен до: {{parseDate(sertificate.validTo)}})</span>\r\n                    </div>\r\n                </div>\r\n                <button class=\"btn btn-block\"\r\n                        :disabled=\"signLoad\"\r\n                        :class=\"{'loading': signLoad}\"\r\n                        @click=\"createSignature\">Подписать</button>\r\n            </div>\r\n\r\n        </Popup>\r\n\r\n        <Popup v-if=\"errorDiadocModal\"\r\n               :error=\"true\"\r\n               :classes=\"'error-modal'\"\r\n               :zIndex=\"101\"\r\n               @close-modal=\"errorDiadocModal = false\">\r\n\r\n            <div class=\"popup-title\">\r\n                <div class=\"h3\">Ошибка</div>\r\n            </div>\r\n\r\n            <div class=\"popup-body\">\r\n                <p class=\"error-text\">{{errorDiadocText}}</p>\r\n                <button class=\"btn btn-lg btn-block close-modal\">Попробовать снова</button>\r\n            </div>\r\n\r\n        </Popup>\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import { getSystemInfo, getUserCertificates, createHash, createAttachedSignature } from 'crypto-pro'\r\n    import moment from \"moment\";\r\n    import {mapState} from 'vuex'\r\n\r\n    import Popup from \"@/components/Blocks/Popup\";\r\n\r\n    export default {\r\n        name: \"AgreementOrganisitionMain\",\r\n        components: {\r\n            Popup\r\n        },\r\n        data: () => ({\r\n            load: false,\r\n            signLoad: false,\r\n            sertificates: [],\r\n            selectedSertificates: '',\r\n            sertificatesModal: false,\r\n            diadocModal: false,\r\n            downloadLoading: false,\r\n            success: false,\r\n            orderId: '',\r\n            errorDiadocModal: false,\r\n            errorDiadocText: ''\r\n        }),\r\n        computed: {\r\n            ...mapState({\r\n                person: state => state.agreement.personFinish,\r\n                finalDocsList: state => state.agreement.docs\r\n            })\r\n        },\r\n        methods: {\r\n            parseDate(date) {\r\n                return moment(date).format('DD.MM.YYYY')\r\n            },\r\n            initDiadocScript() {\r\n                if ( !this.load ) {\r\n                    this.load = true\r\n                    getSystemInfo().then(res => {\r\n                        this.load = false\r\n                        getUserCertificates().then(sertList => {\r\n                            if ( sertList.length > 0 ) {\r\n                                let sertPromises = []\r\n                                this.sertificates = []\r\n\r\n                                sertList.forEach(sert => {\r\n                                    sertPromises.push(new Promise(resolve => {\r\n                                        sert.isValid().then(() => {\r\n                                            this.sertificates.push(sert)\r\n                                            resolve();\r\n                                        })\r\n                                    }))\r\n                                })\r\n\r\n                                Promise.all(sertPromises).then(() => {\r\n                                    this.load = false\r\n                                    this.selectedSertificates = this.sertificates[0]\r\n                                    this.sertificatesModal = true\r\n                                })\r\n                            }\r\n                        }).catch(res => {\r\n                            switch (res) {\r\n                                case 'certificates_not_found':\r\n                                    this.errorDiadocText = 'Не найдено ни одного сертификата.'\r\n                                    break;\r\n                                case 'valid_certificates_not_found':\r\n                                    this.errorDiadocText = 'Не найдено ни одного валидного сертификата.'\r\n                                    break;\r\n                                case 'certificate_read_error':\r\n                                    this.errorDiadocText = 'Ошибка чтения одного из сертификатов.'\r\n                                    break\r\n                            }\r\n                            this.errorDiadocModal = true\r\n                        })\r\n                    }).catch(error => {\r\n                        this.load = false\r\n                        this.diadocModal = true\r\n                    })\r\n                }\r\n            },\r\n            readFile(messageFile) {\r\n                return new Promise(function (resolve) {\r\n                    let fileReader = new FileReader();\r\n                    fileReader.onload = function () {\r\n                        resolve(this.result);\r\n                    };\r\n                    fileReader.readAsArrayBuffer(messageFile);\r\n                });\r\n            },\r\n            generateSignature(hash) {\r\n                const sert = this.selectedSertificates\r\n                let signaturePromise;\r\n                return new Promise((resolve, reject) => {signaturePromise = createAttachedSignature(sert.thumbprint, hash)\r\n                    signaturePromise.then(function (signature) {\r\n                        resolve(signature)\r\n                    }, function (error) {\r\n                        this.errorDiadocText = error.message\r\n                        this.errorDiadocModal = true\r\n                        this.signLoad = false\r\n                        reject()\r\n                    }).catch(error => {\r\n                        this.errorDiadocText = error.message\r\n                        this.errorDiadocModal = true\r\n                        this.signLoad = false\r\n                    })\r\n                })\r\n            },\r\n            createSignature() {\r\n                let dataArr = this.selectedSertificates.subjectName.split(',')\r\n                dataArr = dataArr.map(item => item.trim().split('='))\r\n                const sertInnUl = dataArr.filter(item => item[0] === 'ИНН ЮЛ')[0]\r\n                const sertInn = parseInt(dataArr.filter(item => item[0] === 'ИНН')[0][1]).toString()\r\n                if (!sertInnUl) {\r\n                    if (sertInn !== this.company.inn) {\r\n                        this.errorDiadocText = 'Вы выбрали сертификат, который не принадлежит компании'\r\n                        this.errorDiadocModal = true\r\n                        return false\r\n                    }\r\n                } else {\r\n                    const sertInnUlParsed = parseInt(sertInnUl[1]).toString()\r\n                    if (sertInnUlParsed !== this.company.inn) {\r\n                        this.errorDiadocText = 'Вы выбрали сертификат, который не принадлежит компании'\r\n                        this.errorDiadocModal = true\r\n                        return false\r\n                    }\r\n                }\r\n                this.signLoad = true\r\n                let ths = this\r\n                let signaturePromises = []\r\n                let sendData = {\r\n                    orderId: this.orderId,\r\n                    token: this.getParametr,\r\n                    docs: []\r\n                }\r\n                this.finalDocsList.forEach(finalDocsListItem => {\r\n                    let doc = {\r\n                        docId: finalDocsListItem.id,\r\n                        files: []\r\n                    }\r\n                    finalDocsListItem.files.forEach(file => {\r\n                        signaturePromises.push(new Promise((resolve, reject) => {\r\n                            this.$store.dispatch('getFileWithoutToken', {token: this.getParametr, fileId: file.id}).then(resp => {\r\n                                let fileObj = new File([resp], file.name, {type: file.format})\r\n                                let messagePromise = this.readFile(fileObj)\r\n                                messagePromise.then(message => {\r\n                                    createHash(message).then(function() {\r\n                                        ths.generateSignature(message).then(signature => {\r\n                                            doc.files.push({\r\n                                                id: file.id,\r\n                                                signature\r\n                                            })\r\n                                            resolve()\r\n                                        }).catch(() => {\r\n                                            this.signLoad = false\r\n                                        })\r\n                                    }, function(error) {\r\n                                        this.errorDiadocText = error.message\r\n                                        this.errorDiadocModal = true\r\n                                        this.signLoad = false\r\n                                        reject()\r\n                                    })\r\n                                })\r\n                            })\r\n                        }))\r\n                    })\r\n                    sendData.docs.push(doc)\r\n                })\r\n                Promise.all(signaturePromises).then(() => {\r\n                    this.$store.dispatch('sendSignatureForFoundersFinish', sendData).then(() => {\r\n                        this.signLoad = false\r\n                        this.$refs.sertificatesModal.closePopup()\r\n                        this.successModal = true\r\n                        this.success = true\r\n                    })\r\n                }).catch(() => this.signLoad = false)\r\n            },\r\n            downloadFile() {\r\n                if ( !this.downloadLoading ) {\r\n                    this.downloadLoading = true\r\n                    let promises = []\r\n                    this.finalDocsList.forEach(doc => {\r\n                        doc.files.forEach(file => {\r\n                            promises.push(new Promise(resolve => {\r\n                                this.$store.dispatch('getFileWithoutToken', {token: this.getParametr, fileId: file.id}).then(resp => {\r\n                                    this.$store.dispatch('downloadFile', {content: resp, name: file.name, format: file.format}).then(resolve)\r\n                                })\r\n                            }))\r\n                        })\r\n                    })\r\n                    Promise.all(promises).then(() => {\r\n                        this.downloadLoading = false\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            const params = window\r\n                .location\r\n                .search\r\n                .replace('?','')\r\n                .split('&')\r\n                .reduce(\r\n                    function(p,e){\r\n                        const a = e.split('=');\r\n                        p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\r\n                        return p;\r\n                    },\r\n                    {}\r\n                );\r\n            this.getParametr = params['c']\r\n            this.orderId = params['id']\r\n            this.$store.dispatch('getPersonDataFinish',  {token: this.getParametr, orderId: this.orderId})\r\n            this.$store.dispatch('getAgreementDocsFinish', {token: this.getParametr, orderId: this.orderId})\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Main.vue?vue&type=template&id=254d685c&scoped=true&\"\nimport script from \"./Main.vue?vue&type=script&lang=js&\"\nexport * from \"./Main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"254d685c\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}